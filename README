Seri ReadMe
===========
Richard Uhler <ruhler@csail.mit.edu>
August 24, 2012

Configuring Seri for Build
--------------------------
Before building seri using the makefile, you must configure the build for your
system. This is done by creating the file "tclmk/local.tcl" containing
information about your system.

The following variables should be set in tclmk/local.tcl:
::HAPPY - The path to the happy executable for building the parser.
::GHC - The path to ghc
::PACKAGE_DB - The ghc package database to use when building the seri cabal package
::env(PATH) - The PATH to use for executables
::env(GHC_PACKAGE_PATH) - your ghc package path
::env(LD_LIBRARY_PATH) - the ld library path

For example, tclmk/local.tcl might look like:

=========================================
set ::HAPPY /home/ruhler/.cabal/bin/happy
set ::GHC /usr/bin/ghc
set ::PACKAGE_DB "/var/lib/ghc/package.conf.d"
set ::env(PATH) "/bin:/usr/bin:/home/ruhler/local/bin"
set ::env(GHC_PACKAGE_PATH) "$::PACKAGE_DB:/home/ruhler/.ghc/x86_64-linux-7.4.1/package.conf.d"
set ::env(LD_LIBRARY_PATH) "/home/ruhler/local/lib"
=========================================

Yices 1 and Yices 2
~~~~~~~~~~~~~~~~~~~
Seri requires both yices1 and yices2 be installed on the system. It looks
for a yices1 library called "yices1" and a yices2 library called "yices2".
Because the yices libraries are both shiped as "yices", you will need to
rename them or provide a link to "yices1" and "yices2".

Additionally, in order to use both yices1 and yices2 libraries in a single
executable, seri assumes the symbols in the yices1 library have been renamed
so that prefixes yices_ are now yices1_. The rename map is included in the doc
directory.

So, for example, if you have libyices.a for yices1 and libyices.so.2.1.0 for
yices2 installed, to create the "yices1" and "yices2" libraries suitable for
use with seri, run the commands:

   objcopy --redefine-syms=doc/yicse1rename.txt libyices.a libyices1.a
   ln -s libyices.so.2.1.0 libyices2.so
   ln -s libyices.so.2.1.0 libyices.so.2.0 


Building Seri
-------------
Once seri is configured for build, it can be built by running `make`.

The makefile generates a cabal package for seri, builds it, then runs some
tests on the generated executables.

Generated files of note:
build/src/dist/build/seri/seri
  - the generated seri executable


Trying Seri
-----------
After building seri you can try it out. For example, to run a simple query
with yices 2:

    ./build/src/dist/build/seri/seri --query -s Yices2 -d Query1.dbg --include src -m Seri.SMT.Tests.Query1.main -f src/Seri/SMT/Tests/Query1.sri

If it works, you should get the output:
    (Satisfiable :: Answer Integer) 5

And Query1.dbg will contain the yices2 query evaluated to get this result.

Additional sample queries are available in the src/Seri/SMT/Tests/ directory.

