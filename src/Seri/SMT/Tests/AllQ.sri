
module Seri.SMT.Tests.AllQ where

import Seri.Lib.Prelude
import Seri.SMT.SMT

-- Find a list of all values satisfing the given predicate.
allQ :: (Eq a, Free a) => (a -> Bool) -> Query [a]
allQ p = do
  x <- free
  assert (p x)
  r <- query x
  case r of
     Satisfiable v -> do
        vs <- allQ (\a -> (p a) && (a /= v))
        return (v:vs)
     _ -> return []

pred1 :: Integer -> Bool
pred1 x = (x > 3) && (x < 8)

pred2 :: Integer -> Bool
pred2 x = False

main :: Query [Integer]
main = allQ pred1

