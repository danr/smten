
module Seri.SMT.Tests.BCL.Tuple where {

import Seri.Lib.Prelude;

fst3 :: (a, b, c) -> a;
fst3 (x, _, _) = x;

snd3 :: (a, b, c) -> b;
snd3 (_, x, _) = x;

trd3 :: (a, b, c) -> c;
trd3 (_, _, x) = x;

instance (Eq a, Eq b, Eq c) => Eq (a, b, c) where {
  (==) a b = (fst3 a == fst3 b) && ((snd3 a == snd3 b) && (trd3 a == trd3 b));
  (/=) a b = not (a == b);
};

}

