Performance Log
===============

master aaa1fc9
--------------
shampi::
 yices2, Bit: 11s

nqueens::
 yices2, Int, 24: 17s
 yices2, Integer, 36: 28s
 yices2, Bit, 128: 9s

sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 10 boards: 5s
 yices2, Enum, 100 boards: 67s
 yices2, Integer, 2 boards: 17s

sketch::
 all current test cases: 6s

arch-extract::
 STP FETDEC: 20s
 STP FETEXE: 9m43s


reimpl 0
--------
shampi::
 yices2, Bit: 221s
    Assert time dominates.

nqueens::
 yices2, Int, 24: 76s
    Assert time dominates

sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 10 boards: 21s

sketch::
 miniTest95 blows up

reimpl 1
--------
Changes from reimpl 0:
 * mplus a mzero optimized to a
 * if p then true else true optimized to true

shampi::
 yices2, Bit: tests/cfg/063.cfg.hmp blows up
    100% of time in (==) optimizations for iteFF and orFF.

nqueens::
 yices2, Int, 20: 7s
    ~35% ite1 and mplus for symbolic
    ~25% from variants of select
 yices2, Int, 24: takes a long time

sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 10 boards: 1s (wow!)

sketch::
 miniTest2.sk blows up.

reimpl 2
--------
Changes from reimpl 1:
 * Use stableNameEq, not (==) for iteFF, andFF, and orFF optimizations.

shampi::
 yices2, Bit: 42s
    ~72% spent in fixN
    ~5% in assert
    ~5% in lex
  Poor performance of concrete evaluation dominates.

nqueens::
 yices2, Int, 22: 30s
    ~40% ite1 and mplus for symbolic
    ~30% from variants of select
 yices2, Int, 24: a long time

sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 10 boards: 1s

sketch::
 miniTest2.sk blows up. Appears to be the same blowup with nqueens 24.

reimpl 3
--------
Changes from reimpl 2:
 * Fixed exponential blowup bug in mplus

shampi::
 yices2, Bit: 39s
    ~72% spent in fixN
    ~13% in parser
    ~5% in assert
    ~0% in check
  Poor performance of concrete evaluation dominates.

nqueens::
 yices2, Int, 24: 17s
    ~100% in Assert

sudoku::
 yices2, Bit, 10 boards: 20s
    ~100% yices2 check
 yices2, Enum, 10 boards: 1s

sketch::
  * miniTest48, miniTest49, miniTest52 take a long time
     ~60% in int <=, iteF, iteF_, select
     ~40% in int ==, iteF, iteF_, select
  * rest finish in 9s.

reimpl 4
--------
Changes from reimpl 3:
 * inline merge as ite tree.

shampi::
 yices2, Bit: 20s
    ~68% spent in fixN
    ~13% in parser
    ~8% in assert
    ~0% in check
  Poor performance of concrete evaluation dominates.

nqueens::
 yices2, Int, 24: 17s
 yices2, Integer, 36: 26s
 yices2, Bit, 128: 9s

sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 10 boards: 1s

sketch::
  * miniTest48, miniTest49, miniTest52 take a long time
     ~60% in int <=, iteF, iteF_, select
     ~40% in int ==, iteF, iteF_, select
  * rest finish in 9s.
 
reimpl 5
--------
Changes from reimpl 4:
 * in case expressions, use pattern matching to extract field values, not
   selector functions.

shampi::
 yices2, Bit: 16s
   ~62% spent in FixN
   ~15% spent in ParseHampi
   ~10% in Assert
   ~8% in bind symbolic??
   ~0% in Check

nqueens::
 yices2, Int, 24: 17s
 yices2, Integer, 36: 26s
 yices2, Bit, 128: 8s

 # Max n under 30 seconds.
 y1.int 30 31.083003s
 y1.integer 58 31.980095s
 y2.int 31 30.44166s
 y2.integer 37 49.270544s
 y2.bit 120 128.329716s
 z3.int 30 31.017662s
 z3.integer 37 47.647651s
 z3.bit 108 48.91126s
 stp.int 29 33.40287s
 stp.bit 154 31.238189s


sudoku::
 yices2, Bit, 10 boards: 20s
 yices2, Enum, 100 boards: 7s
 yices2, Integer, 2 boards: 17s

sketch::
  * miniTest48, miniTest49, miniTest52 take a long time
  * rest finish in 9s.

arch-extract::
 STP FETDEC: blows up in memory
    ~80% in ite for Bit
    including ~50% in iteF

Perf Bug Fix
------------
Changes from reimpl 5: 
 * ite p x y ==> x for Integer and Bit when x and y are concrete and x == y
 * ite for data types checks for unreachable fields, so 
        ite p UNREACHABLE x ==> x, ite p x UNREACHABLE ==> x
 These 2 together were the arch-extract performance bug.
shampi::
   yices2, Bit: 22s

nqueens::
   yices2, Int, 24: 2s
   yices2, Integer, 36: 26s
   yices2, Bit, 128: 1s


sudoku:
 yices2, Bit, 100 boards: 4s        (note: representation changed)
 yices2, Enum, 100 boards: 7s
 yices2, Integer, 2 boards: 17s

sketch:
  * miniTest48, miniTest49, miniTest52 take a long time
  * rest finish in 9s

arch-extract:
 STP FETDEC: gets past rule rel generation.
 Seems to hang at: UNSAFEPRINT: rough size of query(66,2)
  with slow increase in memory.
 After fix: 23s

Assert Traversal Fix
--------------------
Use per-formula caches in the assert traversal.

shampi::
   yices2, Bit: 9s

nqueens::
  yices2, Int, 32: 3s
  yices2, Integer, 36: 26s
  yices2, Bit, 128: 1s

sudoku:
  yices2, Bit, 100 boards: 4s
  yices2, Enum, 100 boards: 6s
  yices2, Integer, 2 boards: 17s

sketch:
  passing tests: 6s,
    And a test taking 20 seconds before went down to 2.

arch-extract:
 STP FETDEC: 22s
  

