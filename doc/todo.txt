Priority::
* Add SMT Error test (if needed)
* Add SMT Share test (if needed)

Cleanup::
* Support symbolic IO?
    Or is it okay because it can't ever appear in an assertion?
* Figure out a way so that Bool and Integer and Bit definitions are not so
  tied up with each other?
* Why is bv_extract primitive? Why not just shift right and truncate?

Performance::
* put yices2 in one-shot mode?
* understand odd yices2 behavior with repeated identical queries
* move plugin to later stage of ghc compilation
* add -O2 flag when compiling with plugin
* verify State, Reader, and Map libraries match the haskell libraries
* for yices1: having a shl_n function, which shifts by a constant amount,
    could lead to a decent performance improvement in that case.
    

Future Work::
* Add minisat as a solver (requires CNF)
* Add Z3 as a solver

Front End::
* Auto-derive Show, Eq, Ord, Ix
  maybe look into possibility of using Eq, Ord, etc... from ghc for this
* Can we generate code after optimizations? How?

Documentation
* Update user guide

Runtime::
* detect potential non-termination and perform appropriate abstraction and
  refinement.

Known Bugs::
* Memory leaks of solvers yices1, yices2, and stp

Suspected Bugs::
* pass a symbolic list to 'error'
* something's wrong with code generation for monomorphic let bindings of
  variable types.
    For example: try removing types on local bindings in the
    Smten.Data.Array.array function
* I suspect problems with using a function called 'main' as a normal function
  exported to another module instead of just as a top level main function.
* calling plugin with -O2 flag causes issues
            
Other::
* TODO's inlined in the code
* Do a code review of all of Smten, figure out what can be cleaned up and how.

