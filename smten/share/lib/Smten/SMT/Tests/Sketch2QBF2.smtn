
module Smten.SMT.Tests.Sketch2QBF2 where

import Smten.SMT.Symbolic

sketch2qbf2' :: (Free a) => Used b -> (b -> a -> Bool) -> SMT (Maybe b)
sketch2qbf2' c p = do
  rc <- query $ used c
  case rc of
    Nothing -> return Nothing
    Just cv -> do
      rx <- query $ do
          x <- free
          assert (not (p cv x))
          return x
      case rx of
        Nothing -> return (Just cv)
        Just xv -> do
            use (used c >>= \cv -> assert (p cv xv))
            sketch2qbf2' c p

sketch2qbf2 :: (Free a, Free b) => (b -> a -> Bool) -> SMT (Maybe b)
sketch2qbf2 p = do
  c <- use free
  sketch2qbf2' c p
  
